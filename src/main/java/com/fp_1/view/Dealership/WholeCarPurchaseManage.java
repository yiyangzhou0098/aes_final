/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fp_1.view.Dealership;

import com.fp_1.dao.Assemble.AssembleDao;
import com.fp_1.dao.Dealership.DealershipDao;
import com.fp_1.dao.PartPurchasing.PartPurchasingDao;
import com.fp_1.dao.WholeCarPurchase.CarPurchaseDao;
import com.fp_1.model.Assemble.Assemble;
import com.fp_1.model.Dealership.Dealership;
import com.fp_1.model.PartPurchasing.PartPurchase;
import com.fp_1.model.WholeCarPurchase.CarPurchase;
import java.awt.Component;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author yiyangzhou
 */
public class WholeCarPurchaseManage extends javax.swing.JFrame {
    String Username;
    ConfirmBuying addBuyInfo;
    CarPurchaseDao carpurchasedao;
    /**
     * Creates new form WholeCarPurchase
     */
    public WholeCarPurchaseManage() {
        initComponents();
        populateResultTable();
        populateResultTable2();
    }


    public void populateResultTable() {
        DealershipDao dealershipDao = new DealershipDao();
        DefaultTableModel model = (DefaultTableModel) carTable.getModel();
        model.getDataVector().clear();
        
        List<Dealership> listDealership = dealershipDao.QueryAll();

        for (Dealership dealership : listDealership) {
            ImageIcon image = new ImageIcon(new ImageIcon(dealership.getPhotopath()).getImage()
             .getScaledInstance(165, 100, Image.SCALE_SMOOTH));
            
            model.addRow(new Object[]{
                image,
                dealership.getCar(),
                dealership.getDriveType(),
                dealership.getEngineType(),
                dealership.getTransmission(),
                dealership.getPrice(),
                dealership.getLocation(),

            });

        }
        carTable.setModel(model);
        carTable.setRowHeight(100);
        carTable.getColumnModel().getColumn(0).setPreferredWidth(165);
    }
    
    public void populateResultTable2() {
        CarPurchaseDao carPurchaseDao = new CarPurchaseDao();
        DealershipDao dealershipDao = new DealershipDao();
        Dealership dealership = new Dealership();
        DefaultTableModel model = (DefaultTableModel) carTable2.getModel();
        model.getDataVector().clear();
        
        List<CarPurchase> listCarPurchase = carPurchaseDao.QueryAll();

        for (CarPurchase carPurchase : listCarPurchase) {
            dealership = dealershipDao.QueryByVIN(carPurchase.getVIN());
            String photopath = dealership.getPhotopath();
            
            
            ImageIcon image = new ImageIcon(new ImageIcon(photopath).getImage()
             .getScaledInstance(165, 100, Image.SCALE_SMOOTH));
            
            model.addRow(new Object[]{
                image,
                carPurchase.getOrderID(),
                carPurchase.getOrderStatus(),
                carPurchase.getCreateTime(),
                carPurchase.getAddress1(),
                carPurchase.getAddress2(),
                carPurchase.getShipment(),

            });

        }
        carTable2.setModel(model);
        carTable2.setRowHeight(100);
        carTable2.getColumnModel().getColumn(0).setPreferredWidth(165);
    }

    
    public void addPhotoOnTable() {
        DefaultTableModel model = (DefaultTableModel) carTable.getModel();

        carTable.setFillsViewportHeight(true);
        carTable.getColumn("Pic").setCellRenderer(new CellRenderer());
 
    }
    
    class CellRenderer implements TableCellRenderer {
 
        @Override
        public Component getTableCellRendererComponent(
                JTable table,
                Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {
 
            TableColumn tb = carTable.getColumn("Pic");
            tb.setMaxWidth(60);
            tb.setMinWidth(60);
  
            return (Component) value;
        }
 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        SearchFiled = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(840, 800));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(802, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 800));

        SearchFiled.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        SearchFiled.setText("Type here ...");
        SearchFiled.setToolTipText("");
        SearchFiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFiledActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 204, 255));
        jLabel1.setText("Search By ");

        searchBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "PartName", "CarType", " " }));
        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        carTable.setBackground(new java.awt.Color(204, 204, 204));
        carTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Pic", "Car", "DriveType", "EngineType", "Transmisson", "Price", "Location"
            }
        ) {
            Class[] types = new Class [] {
                javax.swing.Icon.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carTable.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane4.setViewportView(carTable);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(SearchFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(searchBtn)
                .addContainerGap(98, Short.MAX_VALUE))
            .addComponent(jScrollPane4)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(193, 193, 193))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(253, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("All cars", jPanel1);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(800, 700));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        carTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Pic", "OrderID", "OrderStatus", "CreateTime", "Address1", "Address2", "Shipment"
            }
        ) {
            Class[] types = new Class [] {
                javax.swing.Icon.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carTable2);

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(171, 171, 171))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(321, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel2);

        jTabbedPane1.addTab("All orders", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchFiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFiledActionPerformed
        
    }//GEN-LAST:event_SearchFiledActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
//        String search_txt = SearchFiled.getText();
//        String search_type = (String) searchBox.getSelectedItem();
//        if (!search_txt.equals("Type here ...")) {
//            switch (search_type) {
//                case "ID":
//                populateTableByType("ID",search_txt);
//                break;
//                case "PartName":
//                populateTableByType("PartName",search_txt);
//                break;
//                case "CarType":
//                populateTableByType("CarType",search_txt);
//                break;
//                default:
//                return;
//            }
//        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void editTableListen() {
        String oldValue = "";
        DealershipDao dealershipdao = new DealershipDao();
        DefaultTableModel model = (DefaultTableModel) carTable2.getModel();

        model.addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                if (e.getColumn() < 0) {
                    return;
                }
                String nVal = carTable2.getValueAt(e.getLastRow(), e.getColumn())
                        .toString();

                if (nVal.equals(oldValue)) {
                    return;
                }

                if (e.getColumn() == 0) {

                    carTable2.setValueAt(oldValue, e.getLastRow(), e.getColumn());
                    return;
                }
                // 更新数据
                int result = JOptionPane.showConfirmDialog(null, "Sure to edit?");

                if (result == JOptionPane.OK_OPTION) {
                    Dealership dealarship = new Dealership();
                    dealarship.setCar(carTable2.getValueAt(e.getLastRow(),1).toString());
                    dealarship.setDriveType(carTable2.getValueAt(e.getLastRow(), 2).toString());
                    dealarship.setEngineType(carTable2.getValueAt(e.getLastRow(), 3).toString());
                    dealarship.setTransmission(carTable2.getValueAt(e.getLastRow(), 4).toString());
                    dealarship.setPrice(Float.valueOf(carTable2.getValueAt(e.getLastRow(),
                            5).toString()));
                    dealarship.setLocation(carTable2.getValueAt(e.getLastRow(),
                            6).toString());
                    
//                    SimpleDateFormat formatter = new SimpleDateFormat( "yyyy-MM-dd");
//                    String str = table.getValueAt(e.getLastRow(),7).toString();
//                    try{
//                        Date date1 = formatter.parse(str);
//                        partPurchase.setCreateTime(date1);
//                    }catch (java.text.ParseException e1) {
//                            // TODO Auto-generated catch block
//                            e1.printStackTrace();
//                        }
                    
                    
                    dealershipdao.update(dealarship);
                    populateResultTable();
                }
                
            }
        });
    }

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (carTable.getSelectedRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "Select at least one row");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Sure to delete?");

        if (result == JOptionPane.OK_OPTION) {
            int id = carTable.getSelectedRow();
            DealershipDao dealershipdao = new DealershipDao();
            dealershipdao.delete(id);
            populateResultTable();
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (carTable2.getSelectedRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "Select at least one row");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Sure to delete?");

        if (result == JOptionPane.OK_OPTION) {
            int id = carTable2.getSelectedRow();
            DealershipDao dealershipdao = new DealershipDao();
            dealershipdao.delete(id);
            populateResultTable();
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    public static void main(String[] args){
        WholeCarPurchaseManage wholeCarPurchaseManage = new WholeCarPurchaseManage();
        wholeCarPurchaseManage.setVisible(true);
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SearchFiled;
    private javax.swing.JTable carTable;
    private javax.swing.JTable carTable2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> searchBox;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
